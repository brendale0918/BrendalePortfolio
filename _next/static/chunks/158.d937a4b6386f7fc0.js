"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[158],{4158:(e,r,t)=>{t.r(r),t.d(r,{default:()=>o});var n=t(5155),i=t(2115);function o(e){let{SIM_RESOLUTION:r=128,DYE_RESOLUTION:t=1440,CAPTURE_RESOLUTION:o=512,DENSITY_DISSIPATION:u=3.5,VELOCITY_DISSIPATION:a=2,PRESSURE:l=.1,PRESSURE_ITERATIONS:c=20,CURL:f=3,SPLAT_RADIUS:v=.2,SPLAT_FORCE:s=6e3,SHADING:m=!0,COLOR_UPDATE_SPEED:d=10,BACK_COLOR:h={r:.5,g:0,b:0},TRANSPARENT:x=!0}=e,g=(0,i.useRef)(null);return(0,i.useEffect)(()=>{let e,n,i,o,h,x=g.current;if(!x)return;let T=[{id:-1,texcoordX:0,texcoordY:0,prevTexcoordX:0,prevTexcoordY:0,deltaX:0,deltaY:0,down:!1,moved:!1,color:{r:0,g:0,b:0}}],E={SIM_RESOLUTION:r,DYE_RESOLUTION:t,DENSITY_DISSIPATION:u,VELOCITY_DISSIPATION:a,PRESSURE:l,PRESSURE_ITERATIONS:c,CURL:f,SPLAT_RADIUS:v,SPLAT_FORCE:s,SHADING:m,COLOR_UPDATE_SPEED:d},{gl:R,ext:p}=function(e){let r,t,n,i={alpha:!0,depth:!1,stencil:!1,antialias:!1,preserveDrawingBuffer:!1},o=e.getContext("webgl2",i);if(o||(o=e.getContext("webgl",i)||e.getContext("experimental-webgl",i)),!o)throw Error("Unable to initialize WebGL.");let u="drawBuffers"in o,a=!1,l=null;u?(o.getExtension("EXT_color_buffer_float"),a=!!o.getExtension("OES_texture_float_linear")):(l=o.getExtension("OES_texture_half_float"),a=!!o.getExtension("OES_texture_half_float_linear")),o.clearColor(0,0,0,1);let c=u?o.HALF_FLOAT:l&&l.HALF_FLOAT_OES||0;return u?(r=S(o,o.RGBA16F,o.RGBA,c),t=S(o,o.RG16F,o.RG,c),n=S(o,o.R16F,o.RED,c)):(r=S(o,o.RGBA,o.RGBA,c),t=S(o,o.RGBA,o.RGBA,c),n=S(o,o.RGBA,o.RGBA,c)),{gl:o,ext:{formatRGBA:r,formatRG:t,formatR:n,halfFloatTexType:c,supportLinearFiltering:a}}}(x);if(!R||!p)return;function S(e,r,t,n){if(!function(e,r,t,n){let i=e.createTexture();if(!i)return!1;e.bindTexture(e.TEXTURE_2D,i),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texImage2D(e.TEXTURE_2D,0,r,4,4,0,t,n,null);let o=e.createFramebuffer();return!!o&&(e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,i,0),e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE)}(e,r,t,n)){if("drawBuffers"in e)switch(r){case e.R16F:return S(e,e.RG16F,e.RG,n);case e.RG16F:return S(e,e.RGBA16F,e.RGBA,n)}return null}return{internalFormat:r,format:t}}function D(e,r){let t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,n=function(e,r){if(!r)return e;let t="";for(let e of r)t+="#define ".concat(e,"\n");return t+e}(r,t),i=R.createShader(e);return i?(R.shaderSource(i,n),R.compileShader(i),R.getShaderParameter(i,R.COMPILE_STATUS)||console.trace(R.getShaderInfoLog(i)),i):null}function _(e,r){if(!e||!r)return null;let t=R.createProgram();return t?(R.attachShader(t,e),R.attachShader(t,r),R.linkProgram(t),R.getProgramParameter(t,R.LINK_STATUS)||console.trace(R.getProgramInfoLog(t)),t):null}function y(e){let r={},t=R.getProgramParameter(e,R.ACTIVE_UNIFORMS);for(let n=0;n<t;n++){let t=R.getActiveUniform(e,n);t&&(r[t.name]=R.getUniformLocation(e,t.name))}return r}p.supportLinearFiltering||(E.DYE_RESOLUTION=256,E.SHADING=!1);class A{bind(){this.program&&R.useProgram(this.program)}constructor(e,r){this.program=_(e,r),this.uniforms=this.program?y(this.program):{}}}class F{setKeywords(e){let r=0;for(let t of e)r+=function(e){if(!e.length)return 0;let r=0;for(let t=0;t<e.length;t++)r=(r<<5)-r+e.charCodeAt(t)|0;return r}(t);let t=this.programs[r];if(null==t){let n=D(R.FRAGMENT_SHADER,this.fragmentShaderSource,e);t=_(this.vertexShader,n),this.programs[r]=t}t!==this.activeProgram&&(t&&(this.uniforms=y(t)),this.activeProgram=t)}bind(){this.activeProgram&&R.useProgram(this.activeProgram)}constructor(e,r){this.vertexShader=e,this.fragmentShaderSource=r,this.programs={},this.activeProgram=null,this.uniforms={}}}let w=D(R.VERTEX_SHADER,"\n      precision highp float;\n      attribute vec2 aPosition;\n      varying vec2 vUv;\n      varying vec2 vL;\n      varying vec2 vR;\n      varying vec2 vT;\n      varying vec2 vB;\n      uniform vec2 texelSize;\n\n      void main () {\n        vUv = aPosition * 0.5 + 0.5;\n        vL = vUv - vec2(texelSize.x, 0.0);\n        vR = vUv + vec2(texelSize.x, 0.0);\n        vT = vUv + vec2(0.0, texelSize.y);\n        vB = vUv - vec2(0.0, texelSize.y);\n        gl_Position = vec4(aPosition, 0.0, 1.0);\n      }\n    "),U=D(R.FRAGMENT_SHADER,"\n      precision mediump float;\n      precision mediump sampler2D;\n      varying highp vec2 vUv;\n      uniform sampler2D uTexture;\n\n      void main () {\n          gl_FragColor = texture2D(uTexture, vUv);\n      }\n    "),L=D(R.FRAGMENT_SHADER,"\n      precision mediump float;\n      precision mediump sampler2D;\n      varying highp vec2 vUv;\n      uniform sampler2D uTexture;\n      uniform float value;\n\n      void main () {\n          gl_FragColor = value * texture2D(uTexture, vUv);\n      }\n    "),b=D(R.FRAGMENT_SHADER,"\n      precision highp float;\n      precision highp sampler2D;\n      varying vec2 vUv;\n      uniform sampler2D uTarget;\n      uniform float aspectRatio;\n      uniform vec3 color;\n      uniform vec2 point;\n      uniform float radius;\n\n      void main () {\n          vec2 p = vUv - point.xy;\n          p.x *= aspectRatio;\n          vec3 splat = exp(-dot(p, p) / radius) * color;\n          vec3 base = texture2D(uTarget, vUv).xyz;\n          gl_FragColor = vec4(base + splat, 1.0);\n      }\n    "),P=D(R.FRAGMENT_SHADER,"\n      precision highp float;\n      precision highp sampler2D;\n      varying vec2 vUv;\n      uniform sampler2D uVelocity;\n      uniform sampler2D uSource;\n      uniform vec2 texelSize;\n      uniform vec2 dyeTexelSize;\n      uniform float dt;\n      uniform float dissipation;\n\n      vec4 bilerp (sampler2D sam, vec2 uv, vec2 tsize) {\n          vec2 st = uv / tsize - 0.5;\n          vec2 iuv = floor(st);\n          vec2 fuv = fract(st);\n\n          vec4 a = texture2D(sam, (iuv + vec2(0.5, 0.5)) * tsize);\n          vec4 b = texture2D(sam, (iuv + vec2(1.5, 0.5)) * tsize);\n          vec4 c = texture2D(sam, (iuv + vec2(0.5, 1.5)) * tsize);\n          vec4 d = texture2D(sam, (iuv + vec2(1.5, 1.5)) * tsize);\n\n          return mix(mix(a, b, fuv.x), mix(c, d, fuv.x), fuv.y);\n      }\n\n      void main () {\n          #ifdef MANUAL_FILTERING\n              vec2 coord = vUv - dt * bilerp(uVelocity, vUv, texelSize).xy * texelSize;\n              vec4 result = bilerp(uSource, coord, dyeTexelSize);\n          #else\n              vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;\n              vec4 result = texture2D(uSource, coord);\n          #endif\n          float decay = 1.0 + dissipation * dt;\n          gl_FragColor = result / decay;\n      }\n    ",p.supportLinearFiltering?null:["MANUAL_FILTERING"]),B=D(R.FRAGMENT_SHADER,"\n      precision mediump float;\n      precision mediump sampler2D;\n      varying highp vec2 vUv;\n      varying highp vec2 vL;\n      varying highp vec2 vR;\n      varying highp vec2 vT;\n      varying highp vec2 vB;\n      uniform sampler2D uVelocity;\n\n      void main () {\n          float L = texture2D(uVelocity, vL).x;\n          float R = texture2D(uVelocity, vR).x;\n          float T = texture2D(uVelocity, vT).y;\n          float B = texture2D(uVelocity, vB).y;\n\n          vec2 C = texture2D(uVelocity, vUv).xy;\n          if (vL.x < 0.0) { L = -C.x; }\n          if (vR.x > 1.0) { R = -C.x; }\n          if (vT.y > 1.0) { T = -C.y; }\n          if (vB.y < 0.0) { B = -C.y; }\n\n          float div = 0.5 * (R - L + T - B);\n          gl_FragColor = vec4(div, 0.0, 0.0, 1.0);\n      }\n    "),z=D(R.FRAGMENT_SHADER,"\n      precision mediump float;\n      precision mediump sampler2D;\n      varying highp vec2 vUv;\n      varying highp vec2 vL;\n      varying highp vec2 vR;\n      varying highp vec2 vT;\n      varying highp vec2 vB;\n      uniform sampler2D uVelocity;\n\n      void main () {\n          float L = texture2D(uVelocity, vL).y;\n          float R = texture2D(uVelocity, vR).y;\n          float T = texture2D(uVelocity, vT).x;\n          float B = texture2D(uVelocity, vB).x;\n          float vorticity = R - L - T + B;\n          gl_FragColor = vec4(0.5 * vorticity, 0.0, 0.0, 1.0);\n      }\n    "),X=D(R.FRAGMENT_SHADER,"\n      precision highp float;\n      precision highp sampler2D;\n      varying vec2 vUv;\n      varying vec2 vL;\n      varying vec2 vR;\n      varying vec2 vT;\n      varying vec2 vB;\n      uniform sampler2D uVelocity;\n      uniform sampler2D uCurl;\n      uniform float curl;\n      uniform float dt;\n\n      void main () {\n          float L = texture2D(uCurl, vL).x;\n          float R = texture2D(uCurl, vR).x;\n          float T = texture2D(uCurl, vT).x;\n          float B = texture2D(uCurl, vB).x;\n          float C = texture2D(uCurl, vUv).x;\n\n          vec2 force = 0.5 * vec2(abs(T) - abs(B), abs(R) - abs(L));\n          force /= length(force) + 0.0001;\n          force *= curl * C;\n          force.y *= -1.0;\n\n          vec2 velocity = texture2D(uVelocity, vUv).xy;\n          velocity += force * dt;\n          velocity = min(max(velocity, -1000.0), 1000.0);\n          gl_FragColor = vec4(velocity, 0.0, 1.0);\n      }\n    "),I=D(R.FRAGMENT_SHADER,"\n      precision mediump float;\n      precision mediump sampler2D;\n      varying highp vec2 vUv;\n      varying highp vec2 vL;\n      varying highp vec2 vR;\n      varying highp vec2 vT;\n      varying highp vec2 vB;\n      uniform sampler2D uPressure;\n      uniform sampler2D uDivergence;\n\n      void main () {\n          float L = texture2D(uPressure, vL).x;\n          float R = texture2D(uPressure, vR).x;\n          float T = texture2D(uPressure, vT).x;\n          float B = texture2D(uPressure, vB).x;\n          float C = texture2D(uPressure, vUv).x;\n          float divergence = texture2D(uDivergence, vUv).x;\n          float pressure = (L + R + B + T - divergence) * 0.25;\n          gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);\n      }\n    "),N=D(R.FRAGMENT_SHADER,"\n      precision mediump float;\n      precision mediump sampler2D;\n      varying highp vec2 vUv;\n      varying highp vec2 vL;\n      varying highp vec2 vR;\n      varying highp vec2 vT;\n      varying highp vec2 vB;\n      uniform sampler2D uPressure;\n      uniform sampler2D uVelocity;\n\n      void main () {\n          float L = texture2D(uPressure, vL).x;\n          float R = texture2D(uPressure, vR).x;\n          float T = texture2D(uPressure, vT).x;\n          float B = texture2D(uPressure, vB).x;\n          vec2 velocity = texture2D(uVelocity, vUv).xy;\n          velocity.xy -= vec2(R - L, T - B);\n          gl_FragColor = vec4(velocity, 0.0, 1.0);\n      }\n    "),C=(()=>{let e=R.createBuffer();R.bindBuffer(R.ARRAY_BUFFER,e),R.bufferData(R.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),R.STATIC_DRAW);let r=R.createBuffer();return R.bindBuffer(R.ELEMENT_ARRAY_BUFFER,r),R.bufferData(R.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,0,2,3]),R.STATIC_DRAW),R.vertexAttribPointer(0,2,R.FLOAT,!1,0,0),R.enableVertexAttribArray(0),function(e){let r=arguments.length>1&&void 0!==arguments[1]&&arguments[1];R&&(e?(R.viewport(0,0,e.width,e.height),R.bindFramebuffer(R.FRAMEBUFFER,e.fbo)):(R.viewport(0,0,R.drawingBufferWidth,R.drawingBufferHeight),R.bindFramebuffer(R.FRAMEBUFFER,null)),r&&(R.clearColor(0,0,0,1),R.clear(R.COLOR_BUFFER_BIT)),R.drawElements(R.TRIANGLES,6,R.UNSIGNED_SHORT,0))}})(),O=new A(w,U),M=new A(w,L),Y=new A(w,b),G=new A(w,P),V=new A(w,B),H=new A(w,z),k=new A(w,X),W=new A(w,I),K=new A(w,N),j=new F(w,"\n      precision highp float;\n      precision highp sampler2D;\n      varying vec2 vUv;\n      varying vec2 vL;\n      varying vec2 vR;\n      varying vec2 vT;\n      varying vec2 vB;\n      uniform sampler2D uTexture;\n      uniform sampler2D uDithering;\n      uniform vec2 ditherScale;\n      uniform vec2 texelSize;\n\n      vec3 linearToGamma (vec3 color) {\n          color = max(color, vec3(0));\n          return max(1.055 * pow(color, vec3(0.416666667)) - 0.055, vec3(0));\n      }\n\n      void main () {\n          vec3 c = texture2D(uTexture, vUv).rgb;\n          #ifdef SHADING\n              vec3 lc = texture2D(uTexture, vL).rgb;\n              vec3 rc = texture2D(uTexture, vR).rgb;\n              vec3 tc = texture2D(uTexture, vT).rgb;\n              vec3 bc = texture2D(uTexture, vB).rgb;\n\n              float dx = length(rc) - length(lc);\n              float dy = length(tc) - length(bc);\n\n              vec3 n = normalize(vec3(dx, dy, length(texelSize)));\n              vec3 l = vec3(0.0, 0.0, 1.0);\n\n              float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\n              c *= diffuse;\n          #endif\n\n          float a = max(c.r, max(c.g, c.b));\n          gl_FragColor = vec4(c, a);\n      }\n    ");function q(e,r,t,n,i,o){R.activeTexture(R.TEXTURE0);let u=R.createTexture();R.bindTexture(R.TEXTURE_2D,u),R.texParameteri(R.TEXTURE_2D,R.TEXTURE_MIN_FILTER,o),R.texParameteri(R.TEXTURE_2D,R.TEXTURE_MAG_FILTER,o),R.texParameteri(R.TEXTURE_2D,R.TEXTURE_WRAP_S,R.CLAMP_TO_EDGE),R.texParameteri(R.TEXTURE_2D,R.TEXTURE_WRAP_T,R.CLAMP_TO_EDGE),R.texImage2D(R.TEXTURE_2D,0,t,e,r,0,n,i,null);let a=R.createFramebuffer();R.bindFramebuffer(R.FRAMEBUFFER,a),R.framebufferTexture2D(R.FRAMEBUFFER,R.COLOR_ATTACHMENT0,R.TEXTURE_2D,u,0),R.viewport(0,0,e,r),R.clear(R.COLOR_BUFFER_BIT);let l=1/e,c=1/r;return{texture:u,fbo:a,width:e,height:r,texelSizeX:l,texelSizeY:c,attach:e=>(R.activeTexture(R.TEXTURE0+e),R.bindTexture(R.TEXTURE_2D,u),e)}}function J(e,r,t,n,i,o){let u=q(e,r,t,n,i,o),a=q(e,r,t,n,i,o);return{width:e,height:r,texelSizeX:u.texelSizeX,texelSizeY:u.texelSizeY,read:u,write:a,swap(){let e=this.read;this.read=this.write,this.write=e}}}function Q(e,r,t,n,i,o,u){return e.width===r&&e.height===t||(e.read=function(e,r,t,n,i,o,u){let a=q(r,t,n,i,o,u);return O.bind(),O.uniforms.uTexture&&R.uniform1i(O.uniforms.uTexture,e.attach(0)),C(a,!1),a}(e.read,r,t,n,i,o,u),e.write=q(r,t,n,i,o,u),e.width=r,e.height=t,e.texelSizeX=1/r,e.texelSizeY=1/t),e}function Z(){let r=$(E.SIM_RESOLUTION),t=$(E.DYE_RESOLUTION),u=p.halfFloatTexType,a=p.formatRGBA,l=p.formatRG,c=p.formatR,f=p.supportLinearFiltering?R.LINEAR:R.NEAREST;R.disable(R.BLEND),e=e?Q(e,t.width,t.height,a.internalFormat,a.format,u,f):J(t.width,t.height,a.internalFormat,a.format,u,f),n=n?Q(n,r.width,r.height,l.internalFormat,l.format,u,f):J(r.width,r.height,l.internalFormat,l.format,u,f),i=q(r.width,r.height,c.internalFormat,c.format,u,R.NEAREST),o=q(r.width,r.height,c.internalFormat,c.format,u,R.NEAREST),h=J(r.width,r.height,c.internalFormat,c.format,u,R.NEAREST)}function $(e){let r=R.drawingBufferWidth,t=R.drawingBufferHeight,n=r/t,i=Math.round(e),o=Math.round(e*(n<1?1/n:n));return r>t?{width:o,height:i}:{width:i,height:o}}function ee(e){return Math.floor(e*(window.devicePixelRatio||1))}let er=[];E.SHADING&&er.push("SHADING"),j.setKeywords(er),Z();let et=Date.now(),en=0;function ei(){let r=function(){let e=Date.now(),r=(e-et)/1e3;return r=Math.min(r,.016666),et=e,r}();(function(){let e=ee(x.clientWidth),r=ee(x.clientHeight);return(x.width!==e||x.height!==r)&&(x.width=e,x.height=r,!0)})()&&Z(),(en+=r*E.COLOR_UPDATE_SPEED)>=1&&(en=function(e,r,t){let n=1;return 0===n?r:(e-r)%n+r}(en,0,1),T.forEach(e=>{e.color=el()})),function(){for(let e of T)e.moved&&(e.moved=!1,function(e){let r=e.deltaX*E.SPLAT_FORCE,t=e.deltaY*E.SPLAT_FORCE;eo(e.texcoordX,e.texcoordY,r,t,e.color)}(e))}(),function(r){R.disable(R.BLEND),H.bind(),H.uniforms.texelSize&&R.uniform2f(H.uniforms.texelSize,n.texelSizeX,n.texelSizeY),H.uniforms.uVelocity&&R.uniform1i(H.uniforms.uVelocity,n.read.attach(0)),C(o),k.bind(),k.uniforms.texelSize&&R.uniform2f(k.uniforms.texelSize,n.texelSizeX,n.texelSizeY),k.uniforms.uVelocity&&R.uniform1i(k.uniforms.uVelocity,n.read.attach(0)),k.uniforms.uCurl&&R.uniform1i(k.uniforms.uCurl,o.attach(1)),k.uniforms.curl&&R.uniform1f(k.uniforms.curl,E.CURL),k.uniforms.dt&&R.uniform1f(k.uniforms.dt,r),C(n.write),n.swap(),V.bind(),V.uniforms.texelSize&&R.uniform2f(V.uniforms.texelSize,n.texelSizeX,n.texelSizeY),V.uniforms.uVelocity&&R.uniform1i(V.uniforms.uVelocity,n.read.attach(0)),C(i),M.bind(),M.uniforms.uTexture&&R.uniform1i(M.uniforms.uTexture,h.read.attach(0)),M.uniforms.value&&R.uniform1f(M.uniforms.value,E.PRESSURE),C(h.write),h.swap(),W.bind(),W.uniforms.texelSize&&R.uniform2f(W.uniforms.texelSize,n.texelSizeX,n.texelSizeY),W.uniforms.uDivergence&&R.uniform1i(W.uniforms.uDivergence,i.attach(0));for(let e=0;e<E.PRESSURE_ITERATIONS;e++)W.uniforms.uPressure&&R.uniform1i(W.uniforms.uPressure,h.read.attach(1)),C(h.write),h.swap();K.bind(),K.uniforms.texelSize&&R.uniform2f(K.uniforms.texelSize,n.texelSizeX,n.texelSizeY),K.uniforms.uPressure&&R.uniform1i(K.uniforms.uPressure,h.read.attach(0)),K.uniforms.uVelocity&&R.uniform1i(K.uniforms.uVelocity,n.read.attach(1)),C(n.write),n.swap(),G.bind(),G.uniforms.texelSize&&R.uniform2f(G.uniforms.texelSize,n.texelSizeX,n.texelSizeY),!p.supportLinearFiltering&&G.uniforms.dyeTexelSize&&R.uniform2f(G.uniforms.dyeTexelSize,n.texelSizeX,n.texelSizeY);let t=n.read.attach(0);G.uniforms.uVelocity&&R.uniform1i(G.uniforms.uVelocity,t),G.uniforms.uSource&&R.uniform1i(G.uniforms.uSource,t),G.uniforms.dt&&R.uniform1f(G.uniforms.dt,r),G.uniforms.dissipation&&R.uniform1f(G.uniforms.dissipation,E.VELOCITY_DISSIPATION),C(n.write),n.swap(),!p.supportLinearFiltering&&G.uniforms.dyeTexelSize&&R.uniform2f(G.uniforms.dyeTexelSize,e.texelSizeX,e.texelSizeY),G.uniforms.uVelocity&&R.uniform1i(G.uniforms.uVelocity,n.read.attach(0)),G.uniforms.uSource&&R.uniform1i(G.uniforms.uSource,e.read.attach(1)),G.uniforms.dissipation&&R.uniform1f(G.uniforms.dissipation,E.DENSITY_DISSIPATION),C(e.write),e.swap()}(r),R.blendFunc(R.ONE,R.ONE_MINUS_SRC_ALPHA),R.enable(R.BLEND),function(r){let t=r?r.width:R.drawingBufferWidth,n=r?r.height:R.drawingBufferHeight;j.bind(),E.SHADING&&j.uniforms.texelSize&&R.uniform2f(j.uniforms.texelSize,1/t,1/n),j.uniforms.uTexture&&R.uniform1i(j.uniforms.uTexture,e.read.attach(0)),C(r,!1)}(null),requestAnimationFrame(ei)}function eo(r,t,i,o,u){Y.bind(),Y.uniforms.uTarget&&R.uniform1i(Y.uniforms.uTarget,n.read.attach(0)),Y.uniforms.aspectRatio&&R.uniform1f(Y.uniforms.aspectRatio,x.width/x.height),Y.uniforms.point&&R.uniform2f(Y.uniforms.point,r,t),Y.uniforms.color&&R.uniform3f(Y.uniforms.color,i,o,0),Y.uniforms.radius&&R.uniform1f(Y.uniforms.radius,function(e){let r=x.width/x.height;return r>1&&(e*=r),e}(E.SPLAT_RADIUS/100)),C(n.write),n.swap(),Y.uniforms.uTarget&&R.uniform1i(Y.uniforms.uTarget,e.read.attach(0)),Y.uniforms.color&&R.uniform3f(Y.uniforms.color,u.r,u.g,u.b),C(e.write),e.swap()}function eu(e,r,t,n){e.id=r,e.down=!0,e.moved=!1,e.texcoordX=t/x.width,e.texcoordY=1-n/x.height,e.prevTexcoordX=e.texcoordX,e.prevTexcoordY=e.texcoordY,e.deltaX=0,e.deltaY=0,e.color=el()}function ea(e,r,t,n){e.prevTexcoordX=e.texcoordX,e.prevTexcoordY=e.texcoordY,e.texcoordX=r/x.width,e.texcoordY=1-t/x.height,e.deltaX=function(e){let r=x.width/x.height;return r<1&&(e*=r),e}(e.texcoordX-e.prevTexcoordX),e.deltaY=function(e){let r=x.width/x.height;return r>1&&(e/=r),e}(e.texcoordY-e.prevTexcoordY),e.moved=Math.abs(e.deltaX)>0||Math.abs(e.deltaY)>0,e.color=n}function el(){let e=function(e,r,t){let n=0,i=0,o=0,u=Math.floor(6*e),a=6*e-u,l=0,c=t*(1-a*r),f=t*(1-(1-a)*r);switch(u%6){case 0:n=t,i=f,o=l;break;case 1:n=c,i=t,o=l;break;case 2:n=l,i=t,o=f;break;case 3:n=l,i=c,o=t;break;case 4:n=f,i=l,o=t;break;case 5:n=t,i=l,o=c}return{r:n,g:i,b:o}}(Math.random(),1,1);return e.r*=.15,e.g*=.15,e.b*=.15,e}window.addEventListener("mousedown",e=>{let r=T[0];eu(r,-1,ee(e.clientX),ee(e.clientY));let t=el();t.r*=10,t.g*=10,t.b*=10;let n=10*(Math.random()-.5),i=30*(Math.random()-.5);eo(r.texcoordX,r.texcoordY,n,i,t)}),document.body.addEventListener("mousemove",function e(r){let t=T[0],n=ee(r.clientX),i=ee(r.clientY),o=el();ei(),ea(t,n,i,o),document.body.removeEventListener("mousemove",e)}),window.addEventListener("mousemove",e=>{let r=T[0],t=ee(e.clientX),n=ee(e.clientY),i=r.color;ea(r,t,n,i)}),document.body.addEventListener("touchstart",function e(r){let t=r.targetTouches,n=T[0];for(let e=0;e<t.length;e++){let r=ee(t[e].clientX),i=ee(t[e].clientY);ei(),eu(n,t[e].identifier,r,i)}document.body.removeEventListener("touchstart",e)}),window.addEventListener("touchstart",e=>{let r=e.targetTouches,t=T[0];for(let e=0;e<r.length;e++){let n=ee(r[e].clientX),i=ee(r[e].clientY);eu(t,r[e].identifier,n,i)}},!1),window.addEventListener("touchmove",e=>{let r=e.targetTouches,t=T[0];for(let e=0;e<r.length;e++)ea(t,ee(r[e].clientX),ee(r[e].clientY),t.color)},!1),window.addEventListener("touchend",e=>{let r=e.changedTouches,t=T[0];for(let e=0;e<r.length;e++)t.down=!1})},[r,t,o,u,a,l,c,f,v,s,m,d,h,x]),(0,n.jsx)("div",{className:"fixed top-0 left-0 z-50 pointer-events-none w-full h-full",children:(0,n.jsx)("canvas",{ref:g,id:"fluid",className:"w-screen h-screen block"})})}}}]);